apiVersion: v1
kind: ConfigMap
metadata:
  name: resource-requests-controller
  namespace: kube-system
data:
  config.yaml: |-
    excludedNamespaces:
    - kube-system
    - sys-mon
    - sys-ingress
    excludedNames:
    - name: shell123
      namespace: mynamespace
    maxCPULimit: 2
    maxMemLimit: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: resource-requests-controller
  name: resource-requests-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: resource-requests-controller
  template:
    metadata:
      labels:
        app: resource-requests-controller
    spec:
      containers:
      - image: devopyio/resource-requests-admission-controller:35d5f6301a66f3009b37c5c5055668ff04527e84
        name: resource-requests-controller
        env:
        - name: TLS_CERT_FILE
          value: "/etc/tls/cert.pem"
        - name: TLS_KEY_FILE
          value: "/etc/tls/key.pem"
        - name: CONFIG_FILE
          value: "/etc/rra/config.yaml"
        - name: LOG_LEVEL
          value: "debug"
        ports:
        - name: https
          containerPort: 8443
        - name: metrics
          containerPort: 8090
        readinessProbe:
          httpGet:
            path: /health
            port: metrics
          timeoutSeconds: 15
          failureThreshold: 6
          successThreshold: 1
        livenessProbe:
          httpGet:
            path: /health
            port: metrics
          timeoutSeconds: 15
          failureThreshold: 3
          successThreshold: 1
        volumeMounts:
        - name: tls
          mountPath: /etc/tls/
        - name: config
          mountPath: /etc/rra/
      volumes:
      - name: tls
        secret:
          secretName: resource-requests-controller
      - name: config
        configMap:
          name: resource-requests-controller
          items:
          - key: config.yaml
            path: config.yaml
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: resource-requests-controller
  name: resource-requests-controller
  namespace: kube-system
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '8090'
spec:
  ports:
  - name: https
    port: 443
    protocol: TCP
    targetPort: 8443
  selector:
    app: resource-requests-controller
